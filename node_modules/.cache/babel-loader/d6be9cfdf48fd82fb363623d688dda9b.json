{"ast":null,"code":"var _s = $RefreshSig$();\n\n// In hooks/usePaginatedTransactions.ts\nimport { useCallback, useState } from \"react\";\nimport { fakeFetch } from \"../utils/fakeFetch\";\nexport function usePaginatedTransactions() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const fetchAll = useCallback(async () => {\n    setLoading(true);\n    const response = await fakeFetch(\"paginatedTransactions\", {\n      page: 0\n    } // Adjust params as needed\n    );\n    setLoading(false);\n    return response;\n  }, []);\n  return {\n    fetchAll,\n    loading\n  };\n}\n\n_s(usePaginatedTransactions, \"fPisS1YaCCG59e8Qvf8IXzjdg8Y=\");","map":{"version":3,"names":["useCallback","useState","fakeFetch","usePaginatedTransactions","loading","setLoading","fetchAll","response","page"],"sources":["C:/Users/egwha/Desktop/ramp-fe-challenge/ramp-fe-challenge/src/hooks/usePaginatedTransactions.ts"],"sourcesContent":["// In hooks/usePaginatedTransactions.ts\nimport { useCallback, useState } from \"react\";\nimport { PaginatedRequestParams, PaginatedResponse, Transaction } from \"../utils/types\";\nimport { fakeFetch } from \"../utils/fakeFetch\";\n\nexport function usePaginatedTransactions() {\n  const [loading, setLoading] = useState(false);\n\n  const fetchAll = useCallback(async (): Promise<PaginatedResponse<Transaction[]>> => {\n    setLoading(true);\n\n    const response = await fakeFetch<PaginatedResponse<Transaction[]>, PaginatedRequestParams>(\n      \"paginatedTransactions\",\n      { page: 0 } // Adjust params as needed\n    );\n\n    setLoading(false);\n    return response;\n  }, []);\n\n  return { fetchAll, loading };\n}\n"],"mappings":";;AAAA;AACA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAEA,SAASC,SAAT,QAA0B,oBAA1B;AAEA,OAAO,SAASC,wBAAT,GAAoC;EAAA;;EACzC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;EAEA,MAAMK,QAAQ,GAAGN,WAAW,CAAC,YAAuD;IAClFK,UAAU,CAAC,IAAD,CAAV;IAEA,MAAME,QAAQ,GAAG,MAAML,SAAS,CAC9B,uBAD8B,EAE9B;MAAEM,IAAI,EAAE;IAAR,CAF8B,CAElB;IAFkB,CAAhC;IAKAH,UAAU,CAAC,KAAD,CAAV;IACA,OAAOE,QAAP;EACD,CAV2B,EAUzB,EAVyB,CAA5B;EAYA,OAAO;IAAED,QAAF;IAAYF;EAAZ,CAAP;AACD;;GAhBeD,wB"},"metadata":{},"sourceType":"module"}