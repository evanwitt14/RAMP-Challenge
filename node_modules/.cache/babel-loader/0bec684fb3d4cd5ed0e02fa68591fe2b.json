{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\egwha\\\\Desktop\\\\ramp-fe-challenge\\\\ramp-fe-challenge\\\\src\\\\components\\\\InputSelect\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport Downshift from \"downshift\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function InputSelect(_ref) {\n  _s();\n\n  let {\n    label,\n    defaultValue,\n    onChange: consumerOnChange,\n    items,\n    parseItem,\n    isLoading,\n    loadingLabel\n  } = _ref;\n  const [selectedValue, setSelectedValue] = useState(defaultValue !== null && defaultValue !== void 0 ? defaultValue : null);\n  const [dropdownPosition, setDropdownPosition] = useState({\n    top: 0,\n    left: 0\n  });\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const onChange = useCallback(selectedItem => {\n    setSelectedValue(selectedItem);\n    consumerOnChange(selectedItem);\n  }, [consumerOnChange]);\n\n  const updateDropdownPosition = target => {\n    if (target) {\n      const {\n        top,\n        left\n      } = target.getBoundingClientRect();\n      const {\n        scrollY\n      } = window;\n      setDropdownPosition({\n        top: scrollY + top + 63,\n        left\n      });\n    }\n  };\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const target = document.getElementById(\"RampSelect-toggle\");\n      updateDropdownPosition(target);\n    };\n\n    if (isDropdownOpen) {\n      window.addEventListener(\"scroll\", handleScroll);\n    } else {\n      window.removeEventListener(\"scroll\", handleScroll);\n    }\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [isDropdownOpen]);\n  return /*#__PURE__*/_jsxDEV(Downshift, {\n    id: \"RampSelect\",\n    onChange: onChange,\n    selectedItem: selectedValue,\n    itemToString: item => item ? parseItem(item).label : \"\",\n    children: _ref2 => {\n      let {\n        getItemProps,\n        getLabelProps,\n        getMenuProps,\n        isOpen,\n        highlightedIndex,\n        selectedItem,\n        getToggleButtonProps,\n        inputValue\n      } = _ref2;\n      const toggleProps = getToggleButtonProps({\n        id: \"RampSelect-toggle\",\n        onClick: event => {\n          updateDropdownPosition(event.target);\n          toggleProps.onClick(event);\n          setIsDropdownOpen(!isOpen);\n        }\n      });\n      const parsedSelectedItem = selectedItem === null ? null : parseItem(selectedItem);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampInputSelect--root\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"RampText--s RampText--hushed\",\n          ...getLabelProps(),\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RampBreak--xs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RampInputSelect--input\",\n          ...toggleProps,\n          children: parsedSelectedItem ? parsedSelectedItem.label : inputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classNames(\"RampInputSelect--dropdown-container\", {\n            \"RampInputSelect--dropdown-container-opened\": isOpen\n          }),\n          ...getMenuProps(),\n          style: {\n            top: dropdownPosition.top,\n            left: dropdownPosition.left\n          },\n          children: renderItems()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this);\n\n      function renderItems() {\n        if (!isOpen) {\n          return null;\n        }\n\n        if (isLoading) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"RampInputSelect--dropdown-item\",\n            children: [loadingLabel, \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 20\n          }, this);\n        }\n\n        if (items.length === 0) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"RampInputSelect--dropdown-item\",\n            children: \"No items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 20\n          }, this);\n        }\n\n        return items.map((item, index) => {\n          const parsedItem = parseItem(item);\n          return /*#__PURE__*/_jsxDEV(\"div\", { ...getItemProps({\n              key: parsedItem.value,\n              index,\n              item,\n              className: classNames(\"RampInputSelect--dropdown-item\", {\n                \"RampInputSelect--dropdown-item-highlighted\": highlightedIndex === index,\n                \"RampInputSelect--dropdown-item-selected\": (parsedSelectedItem === null || parsedSelectedItem === void 0 ? void 0 : parsedSelectedItem.value) === parsedItem.value\n              })\n            }),\n            children: parsedItem.label\n          }, parsedItem.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this);\n        });\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InputSelect, \"T7KRn+fORmus+a0HiTNJyynrd4o=\");\n\n_c = InputSelect;\n\nconst getDropdownPosition = target => {\n  if (target instanceof Element) {\n    const {\n      top,\n      left\n    } = target.getBoundingClientRect();\n    const {\n      scrollY\n    } = window;\n    return {\n      top: scrollY + top + 63,\n      left\n    };\n  }\n\n  return {\n    top: 0,\n    left: 0\n  };\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"InputSelect\");","map":{"version":3,"names":["Downshift","useCallback","useEffect","useState","classNames","InputSelect","label","defaultValue","onChange","consumerOnChange","items","parseItem","isLoading","loadingLabel","selectedValue","setSelectedValue","dropdownPosition","setDropdownPosition","top","left","isDropdownOpen","setIsDropdownOpen","selectedItem","updateDropdownPosition","target","getBoundingClientRect","scrollY","window","handleScroll","document","getElementById","addEventListener","removeEventListener","item","getItemProps","getLabelProps","getMenuProps","isOpen","highlightedIndex","getToggleButtonProps","inputValue","toggleProps","id","onClick","event","parsedSelectedItem","renderItems","length","map","index","parsedItem","key","value","className","getDropdownPosition","Element"],"sources":["C:/Users/egwha/Desktop/ramp-fe-challenge/ramp-fe-challenge/src/components/InputSelect/index.tsx"],"sourcesContent":["import Downshift from \"downshift\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport classNames from \"classnames\";\nimport { DropdownPosition, GetDropdownPositionFn, InputSelectOnChange, InputSelectProps } from \"./types\";\n\nexport function InputSelect<TItem>({\n  label,\n  defaultValue,\n  onChange: consumerOnChange,\n  items,\n  parseItem,\n  isLoading,\n  loadingLabel,\n}: InputSelectProps<TItem>) {\n  const [selectedValue, setSelectedValue] = useState<TItem | null>(defaultValue ?? null);\n  const [dropdownPosition, setDropdownPosition] = useState<DropdownPosition>({\n    top: 0,\n    left: 0,\n  });\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n\n  const onChange = useCallback<InputSelectOnChange<TItem>>(\n    (selectedItem) => {\n      setSelectedValue(selectedItem);\n      consumerOnChange(selectedItem);\n    },\n    [consumerOnChange]\n  );\n\n  const updateDropdownPosition = (target: HTMLElement | null) => {\n    if (target) {\n      const { top, left } = target.getBoundingClientRect();\n      const { scrollY } = window;\n      setDropdownPosition({\n        top: scrollY + top + 63,\n        left,\n      });\n    }\n  };\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const target = document.getElementById(\"RampSelect-toggle\");\n      updateDropdownPosition(target);\n    };\n\n    if (isDropdownOpen) {\n      window.addEventListener(\"scroll\", handleScroll);\n    } else {\n      window.removeEventListener(\"scroll\", handleScroll);\n    }\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [isDropdownOpen]);\n\n  return (\n    <Downshift<TItem>\n      id=\"RampSelect\"\n      onChange={onChange}\n      selectedItem={selectedValue}\n      itemToString={(item) => (item ? parseItem(item).label : \"\")}\n    >\n      {({\n        getItemProps,\n        getLabelProps,\n        getMenuProps,\n        isOpen,\n        highlightedIndex,\n        selectedItem,\n        getToggleButtonProps,\n        inputValue,\n      }) => {\n        const toggleProps = getToggleButtonProps({\n          id: \"RampSelect-toggle\",\n          onClick: (event) => {\n            updateDropdownPosition(event.target);\n            toggleProps.onClick(event);\n            setIsDropdownOpen(!isOpen);\n          },\n        });\n\n        const parsedSelectedItem = selectedItem === null ? null : parseItem(selectedItem);\n\n        return (\n          <div className=\"RampInputSelect--root\">\n            <label className=\"RampText--s RampText--hushed\" {...getLabelProps()}>\n              {label}\n            </label>\n            <div className=\"RampBreak--xs\" />\n            <div\n              className=\"RampInputSelect--input\"\n              {...toggleProps}\n            >\n              {parsedSelectedItem ? parsedSelectedItem.label : inputValue}\n            </div>\n\n            <div\n              className={classNames(\"RampInputSelect--dropdown-container\", {\n                \"RampInputSelect--dropdown-container-opened\": isOpen,\n              })}\n              {...getMenuProps()}\n              style={{ top: dropdownPosition.top, left: dropdownPosition.left }}\n            >\n              {renderItems()}\n            </div>\n          </div>\n        );\n\n        function renderItems() {\n          if (!isOpen) {\n            return null;\n          }\n\n          if (isLoading) {\n            return <div className=\"RampInputSelect--dropdown-item\">{loadingLabel}...</div>;\n          }\n\n          if (items.length === 0) {\n            return <div className=\"RampInputSelect--dropdown-item\">No items</div>;\n          }\n\n          return items.map((item, index) => {\n            const parsedItem = parseItem(item);\n            return (\n              <div\n                key={parsedItem.value}\n                {...getItemProps({\n                  key: parsedItem.value,\n                  index,\n                  item,\n                  className: classNames(\"RampInputSelect--dropdown-item\", {\n                    \"RampInputSelect--dropdown-item-highlighted\": highlightedIndex === index,\n                    \"RampInputSelect--dropdown-item-selected\":\n                      parsedSelectedItem?.value === parsedItem.value,\n                  }),\n                })}\n              >\n                {parsedItem.label}\n              </div>\n            );\n          });\n        }\n      }}\n    </Downshift>\n  );\n}\n\nconst getDropdownPosition: GetDropdownPositionFn = (target) => {\n  if (target instanceof Element) {\n    const { top, left } = target.getBoundingClientRect();\n    const { scrollY } = window;\n    return {\n      top: scrollY + top + 63,\n      left,\n    };\n  }\n\n  return { top: 0, left: 0 };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}